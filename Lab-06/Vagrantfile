home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :zfs => {
        :box_name => "generic/debian12",
        :ip => '192.168.11.11',
    :disks => {
        :sata1 => {
            :dfile => home + './sata1.vdi',
            :size => 10240,
            :port => 1
        },
        :sata2 => {
            :dfile => home + './sata2.vdi',
            :size => 2048, # Megabytes
            :port => 2
        },
        :sata3 => {
            :dfile => home + './sata3.vdi',
            :size => 1024, # Megabytes
            :port => 3
        },
        :sata4 => {
            :dfile => home + './sata4.vdi',
            :size => 1024,
            :port => 4
        },        
		:sata5 => {
            :dfile => home + './sata5.vdi',
            :size => 10240,
            :port => 1
        },
        :sata6 => {
            :dfile => home + './sata6.vdi',
            :size => 2048, # Megabytes
            :port => 2
        },
        :sata7 => {
            :dfile => home + './sata7.vdi',
            :size => 1024, # Megabytes
            :port => 3
        },
        :sata8 => {
            :dfile => home + './sata8.vdi',
            :size => 1024,
            :port => 4
        }
    }
  },
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
      config.vm.define boxname do |box|
        box.vm.box = boxconfig[:box_name]
        box.vm.box_version = boxconfig[:box_version]
        box.vm.network "private_network", ip: boxconfig[:ip]
		box.vm.host_name = "zfs"
        box.vm.provider :virtualbox do |vb|
              vb.customize ["modifyvm", :id, "--memory", "1024"]
              needsController = false
        boxconfig[:disks].each do |dname, dconf|
              unless File.exist?(dconf[:dfile])
              vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
         needsController =  true
         end
        end
            if needsController == true
                vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                boxconfig[:disks].each do |dname, dconf|
                vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                end
             end
          end
	    box.vm.provision "shell" do |s|
          ssh_pub_key = File.readlines("/root/.ssh/id_rsa.pub").first.strip
          s.inline = <<-SHELL
          echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
		  echo "deb http://deb.debian.org/debian bookworm main non-free non-free-firmware contrib" > /etc/apt/sources.list
          echo "deb http://deb.debian.org/debian bookworm-updates main non-free non-free-firmware contrib" >> /etc/apt/sources.list
          echo "deb http://deb.debian.org/debian-security/ bookworm-security main non-free non-free-firmware contrib" >> /etc/apt/sources.list
          echo "deb http://security.debian.org/debian-security bookworm-security main non-free-firmware" >> /etc/apt/sources.list
          apt update
		  apt install -y linux-headers-amd64 zfsutils-linux zfs-dkms zfs-zed wget
		  modprobe zfs
          SHELL
        end
  
         end
    end
  end
