---
################ ALL ################
- name: Configure ALL
  hosts: all
  become: true

  tasks:
  - name: Execute shell commands
    shell: |
      timedatectl set-timezone Asia/Yekaterinburg
      localectl set-locale LANG=ru_RU.UTF-8
      systemctl stop vboxadd-service.service

  - name: Set up forward packages across routers
    ansible.builtin.sysctl:
      name: net.ipv4.conf.all.forwarding
      value: '1'
      state: present
    when: "'routers' in group_names"

# ################ SERVER ################
# - name: Configure Server
  # hosts: server
  # become: true

  # tasks:
  # - name: Install packages
    # apt: name={{ item }} state=latest update_cache=true
    # loop: [borgbackup]
        
  # - name: Create user otus
    # user:
      # name: borg
      # create_home: yes
      # shell: /bin/bash

  # - name: Create backup directory
    # file:
      # path: /var/backup
      # state: directory
      # owner: borg
      # group: borg
      # mode: 0770

  # - name: Create a ext4 filesystem on /dev/sdb
    # community.general.filesystem:
      # fstype: ext4
      # dev: /dev/sdb

  # - name: Mount backup volume
    # mount:
      # path: /var/backup
      # src: /dev/sdb
      # fstype: ext4
      # state: mounted

  # - name: Set permissions to backup directory
    # file:
      # path: /var/backup
      # state: directory
      # recurse: true
      # owner: borg
      # group: borg
      # mode: 0770

  # - name: Execute shell commands
    # shell: |
      # timedatectl set-timezone Asia/Yekaterinburg
      # localectl set-locale LANG=ru_RU.UTF-8
      # systemctl stop vboxadd-service.service
      # rm -r /var/backup/*      
      
# ################ CLIENT ################
# - name: Configure Client
  # hosts: client
  # become: true
  # vars:
    # borg_pass: "Otus@2024"
  
  # tasks:
  # - name: Install packages
    # apt: name={{ item }} state=latest update_cache=true
    # loop: [borgbackup]

  # - name: Execute shell commands
    # shell: |
      # timedatectl set-timezone Asia/Yekaterinburg
      # localectl set-locale LANG=ru_RU.UTF-8
      # systemctl stop vboxadd-service.service
      
  # - name: Generate an SSH key
    # community.crypto.openssh_keypair:
      # path: ~/.ssh/id_rsa
    # register: pub_key  
 
  # - name: Put public key
    # authorized_key:
      # user: borg
      # state: present
      # key: "{{ pub_key.public_key }}"
    # delegate_to: server 
 
  # # - name: Put public key for borg user
    # # ansible.builtin.lineinfile:
      # # path: /home/borg/.ssh/authorized_keys
      # # line: "{{ pub_key.public_key }} borg"
      # # create: true
      # # owner: borg
      # # group: borg
      # # mode: 0600
    # # delegate_to: server     
  
  # - name: Config /etc/ssh/ssd_config
    # lineinfile:
      # dest: "/etc/ssh/ssh_config"
      # regexp: '^#(.*)StrictHostKeyChecking '
      # line: '    StrictHostKeyChecking no'

  # - name: Create borg repo
    # shell:
      # borg init --encryption=repokey borg@192.168.11.12:/var/backup/
    # environment:
        # BORG_PASSPHRASE: "{{ borg_pass }}"
    # register: borg_init
    # changed_when: "'Failed' in borg_init.stderr"

  # - name: Create systemd unit
    # template:
      # src: templates/borg-backup.service.j2
      # dest: /etc/systemd/system/borg-backup.service
      # owner: root
      # group: root
      # mode: 0644

  # - name: Create systemd timer
    # template:
      # src: templates/borg-backup.timer
      # dest: /etc/systemd/system/borg-backup.timer
      # owner: root
      # group: root
      # mode: 0644

  # - name: Restart borg-backup timer
    # systemd:
      # state: restarted
      # name: borg-backup.timer
      # enabled: true
      # daemon_reload: true

  # - name: Restart borg-backup service
    # systemd:
      # state: restarted
      # name: borg-backup.service
      # enabled: true
