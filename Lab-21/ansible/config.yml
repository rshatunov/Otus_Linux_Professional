---
################ inetRouter ################
- name: Configure inetRouter
  hosts: inetRouter
  become: true

  tasks:
  - name: Install packages
    apt: name={{ item }} state=latest update_cache=true
    loop: [iptables, iptables-persistent]
    
  - name: Copy config iptables
    template:
      src: templates/rules.v4_01
      dest: /etc/iptables/rules.v4
      owner: root
      group: root
      mode: 0644
    
  - name: Copy config interfaces
    template:
      src: templates/inetRouter
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
   
  - name: Reboot
    reboot:
       
 ################ inetRouter2 ################
- name: Configure inetRouter2
  hosts: inetRouter2
  become: true
 
  tasks:
  - name: Install packages
    apt: name={{ item }} state=latest update_cache=true
    loop: [iptables, iptables-persistent]
    when: "'inetRouter2' in ansible_hostname"
    
  - name: Copy config interfaces inetRouter2
    template:
      src: templates/inetRouter2
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'inetRouter2' in ansible_hostname"
    
  - name: Copy config iptables
    template:
      src: templates/rules.v4_02
      dest: /etc/iptables/rules.v4
      owner: root
      group: root
      mode: 0644
    when: "'inetRouter2' in ansible_hostname"
  

  - name: Reboot
    reboot:

################ ALL ################
- name: Configure ALL
  hosts: all
  become: true

  tasks:
  - name: Execute shell commands
    shell: |
      timedatectl set-timezone Asia/Yekaterinburg
      localectl set-locale LANG=ru_RU.UTF-8
      systemctl stop vboxadd-service.service
    
  - name: Install nginx
    apt: name={{ item }} state=latest update_cache=true
    loop: [nginx]
    when: 'ansible_hostname == "centralServer"'
    
  - name: Copy config interfaces centralRouter
    template:
      src: templates/centralRouter
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'centralRouter' in ansible_hostname"
      
  - name: Copy config interfaces centralServer
    template:
      src: templates/centralServer
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'centralServer' in ansible_hostname"
 
  - name: Copy config interfaces office1Router
    template:
      src: templates/office1Router
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'office1Router' in ansible_hostname"
    
  - name: Copy config interfaces office1Server
    template:
      src: templates/office1Server
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'office1Server' in ansible_hostname"
     
  - name: Copy config interfaces
    template:
      src: templates/office2Router
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'office2Router' in ansible_hostname"
    
  - name: Copy config interfaces office2Server
    template:
      src: templates/office2Server
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: 0644 
    when: "'office2Server' in ansible_hostname"
    
  - name: Restart networks
    service:
      name: networking
      state: restarted
 
################ TEST ################ 
- name: Test access to Inernet
  hosts: servers
  become: true
  
  tasks:
  - name: Test routes
    shell: ping -c4 77.88.8.8 && traceroute -m4 77.88.8.8
    register: result
    when: "'servers' in group_names"
  - name: Print traceroute
    debug:
      var: result.stdout_lines